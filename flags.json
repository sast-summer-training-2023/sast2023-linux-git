[
	{
		"name": "Linux",
		"flag": "ConCurrency",
		"score": 7,
		"category": "Linux",
		"comment": "使用 tmux 新开一个 session 后台执行，Ctrl + B ~ d 将其脱离 (detach)。等待 20 ~ 30 分钟后使用 tmux attach 重新回到原 session 即可看到 flag。"
	},
	{
		"name": "Envir",
		"flag": "SHELL-BASIC-SKILLS",
		"score": 7,
		"category": "Linux",
		"comment": "Task 1：将文件所在目录添加至 PATH，或干脆将可执行文件移至 PATH 所在目录；Task 2：ulimit -s unlimited；Task 3：envir > flags.txt。"
	},
	{
		"name": "Text",
		"flag": "Tekst_Process_practice_IN_termINal",
		"score": 7,
		"category": "Linux",
		"comment": ":%s/\\[//g :%s/pr/IN/g :%s/\\]//g :%s/\\cqu/st/g /sast2023{"
	},
	{
		"name": "Ripes",
		"flag": "24615-LINES-IN-TOTAL",
		"score": 9,
		"category": "Linux",
		"comment": "find src '(' -name '*.cpp' -o -name '*.h' ')' -size +3k -exec wc {} +"
	},
	{
		"name": "Classification",
		"flag": "sorting-out-is-a-good-habit",
		"score": 11,
		"category": "Linux",
		"comment": "使用 file 获取文件类型，然后使用 cut 等命令截取文件名列表，使用 mv/rename 重命名对应的文件，重复 16 次。"
	},
	{
		"name": "Homeless",
		"flag": "WANDERING-USER",
		"score": 3,
		"category": "Linux",
		"comment": "在 `/etc/passwd` 中可以找到系统中所有注册过的用户，在其中可以发现 sast2023{WANDERING-USER}。"
	},
	{
		"name": "Hidden",
		"flag": "hidden-files-are-starting-with-a-dot",
		"score": 3,
		"category": "Linux",
		"comment": "Linux 的隐藏文件/目录通过其名称是否以 '.' 开头区分；使用 `ls -a` 可以查看所有以 '.' 开头的隐藏文件/目录。"
	},
	{
		"name": "Proxy",
		"flag": "Be_CAREFUL_using_PROXIES",
		"score": 7,
		"category": "Linux",
		"comment": "curl -vix http://59.66.131.240:<port2>/ http://59.66.131.240:<port1>/flag",
		"comment2": "http_proxy=http://59.66.131.240:<port2> curl -vi http://59.66.131.240:<port1>/flag"
	},
	{
		"name": "Apt",
		"flag": "HelloTUNA!",
		"score": 4,
		"category": "Linux",
		"comment": "查阅 /etc/apt/sources.list 文件即可找到。"
	},
	{
		"name": "Branches",
		"flag": "git/branches-are-powerful",
		"score": 5,
		"category": "Git",
		"comment": "git branch 查看所有分支即可找到。"
	},
	{
		"name": "Message",
		"flag": "commit-message-should-be-standarized",
		"score": 5,
		"category": "Git",
		"comment": "git show 查看根提交 c9af339 的提交信息即可找到。"
	},
	{
		"name": "History",
		"flag": "revert_OR_reset",
		"score": 5,
		"category": "Git",
		"comment": "查看历史记录，使用 git revert、git reset、git switch --detach 等均可。"
	},
	{
		"name": "Reflog",
		"flag": "check-REFLOG-immediately__once-you-make-MISOPERATION",
		"score": 7,
		"category": "Git",
		"comment": "git reflog 找到被 reset 的提交 80d175a，进入即可找到 flag。"
	},
	{
		"name": "Werewolf",
		"flag": "ybhR3pWRQAZ-xWIARyniG",
		"score": 7,
		"category": "Git",
		"comment": "切换到 werewolf 分支，运行 git blame state，找到 Werewolf 提交的唯一一行。"
	},
	{
		"name": "Debug",
		"flag": "_fzhRKnKtduIP6_4",
		"score": 7,
		"category": "Git",
		"comment": "切换到 debug 分支，使用 git 的二分查找功能：依次运行 git bisect start; git bisect bad; git bisect good c9af339 (c9af339 是根提交)，找到第一发坏提交 a40ae20 的信息。"
	},
	{
		"name": "Bonus 1",
		"flag": "c7w&abmfy&cmh&icera_tql",
		"score": 1,
		"category": "Bonus",
		"comment": "根据去年的经验（雾），将 classification 任务中所得到的 bonus1.png 通过 scp 拷贝到本地，观察图片 (表情包) 即可得到 flag。"
	},
	{
		"name": "Bonus 2",
		"flag": "917-config",
		"score": 1,
		"category": "Bonus",
		"comment": "翻阅家目录下的 ~/.gitconfig 或 .git/config 文件均可得到 flag。"
	},
	{
		"name": "Bonus 3",
		"flag": "web-debugger",
		"score": 1,
		"category": "Bonus",
		"comment": "在 (较新版本的) Chrome/Edge 浏览器的检查模式中点开 Sources (源代码) 面板中可以找到前端工作区的树形结构，其中的 src/pages/main.tsx 文件中藏有 flag (具体的 Web 和前后端会在后续的课程中涉及)。其余浏览器类似。"
	},
	{
		"name": "Bonus 4",
		"flag": "http://headers",
		"score": 1,
		"category": "Bonus",
		"comment": "在用 curl 提交时加上 -i 选项，即可查看到响应头 Bonus4: sast2023{http://headers}，wget 类似。",
		"comment2": "事实上，该服务器的所有响应的 Header 都会带上这一项响应头，这可以在 Chrome/Edge 浏览器的检查模式中的 Network (网络) 面板中找到，这也是一个非常有用的利器。"
	},
	{
		"name": "Bonus 5",
		"flag": "|)_()_(_|<_E_|2_file",
		"score": 1,
		"category": "Bonus",
		"comment": "进入 handout 中的 Docker Hub 链接，进入某一个具体的 Tag (点击 Tags 面板 -> 点击一项的详细信息)，可以在 Image Layers 中看到类似 Dockerfile 配置 (Docker 的具体原理会在后续的课程中涉及)，在 Docker Hub 中可以看到镜像的每一层 Layer 以及它们对应的命令。"
	},
	{
		"name": "Bonus 6",
		"flag": "prOF1Le_d3t3ctor",
		"score": 1,
		"category": "Bonus",
		"comment": "在我的 GitHub 个人页面 (yhx-12243) 和 git.tsinghua 个人页面 (yu-hx21) 中都可以找到。"
	}
]
